---

- hosts: all
  pre_tasks:
    - name: Set project path fact
      set_fact:
        tripleo_ansible_project_path: "{{ ansible_user_dir }}/{{ zuul.project.src_dir }}"

    - name: Set action plugin path fact
      set_fact:
        tripleo_action_plugins_paths:
          - "{{ tripleo_ansible_project_path }}/tripleo_ansible/roles.galaxy/config_template/action"
          - "{{ tripleo_ansible_project_path }}/tripleo_ansible/ansible_plugins/action"
          - "/usr/share/ansible/plugins/action"

    - name: Ensure output dirs
      file:
        path: "{{ ansible_user_dir }}/zuul-output/logs"
        state: directory

    - name: Ensure pip is available
      include_role:
        name: ensure-pip

    # NOTE(mwhahaha): pin container tools to an older version since the newer
    # one conflicts with the docker requirements for stable/train. We need
    # to convert all jobs to podman or figure out another workaround
    - name: Pin container-tools
      become: true
      shell: |
        dnf module disable container-tools:rhel8 -y
        dnf module enable container-tools:2.0 -y
      when:
        - (ansible_os_family | lower) == "redhat"
        - (ansible_distribution_major_version | int) >= 8

    - name: Setup bindep
      pip:
        name: "bindep"
        virtualenv: "{{ ansible_user_dir }}/test-python"
        virtualenv_command: "{{ ensure_pip_virtualenv_command }}"
        virtualenv_site_packages: true

    - name: Run bindep
      shell: |-
        . {{ ansible_user_dir }}/test-python/bin/activate
        {{ tripleo_ansible_project_path }}/scripts/bindep-install
      become: true

    - name: Setup test-python
      pip:
        requirements: "{{ tripleo_ansible_project_path }}/molecule-requirements.txt"
        virtualenv: "{{ ansible_user_dir }}/test-python"
        virtualenv_command: "{{ ensure_pip_virtualenv_command }}"
        virtualenv_site_packages: true
        extra_args: >-
          --constraint "{{ tripleo_ansible_project_path }}/ansible-requirements.txt"

    - name: Display test-python virtualenv package versions
      shell: |-
        . {{ ansible_user_dir }}/test-python/bin/activate
        pip freeze

    - name: Basic ci setup
      become: true
      block:
        - name: Ensure ci directories
          file:
            path: "/etc/ci"
            state: "directory"

        - name: Ensure ci mirror file
          file:
            path: "/etc/ci/mirror_info.sh"
            state: "touch"

        - name: Set an appropriate fs.file-max
          sysctl:
            name: fs.file-max
            value: 2048000
            sysctl_set: true
            state: present
            reload: true

        - name: Set container_manage_cgroup boolean
          seboolean:
            name: container_manage_cgroup
            state: true
            persistent: true
          failed_when: false

        - name: Create limits file for containers
          copy:
            content: |
              * soft nofile 102400
              * hard nofile 204800
              * soft nproc 2048
              * hard nproc 4096
            dest: /etc/security/limits.d/containers.conf

        - name: Reset ssh connection
          meta: reset_connection
  tasks:
    - name: Get Ansible Galaxy roles
      command: >-
        {{ ansible_user_dir }}/test-python/bin/ansible-galaxy install
        -fr
        {{ tripleo_ansible_project_path }}/tripleo_ansible/ansible-role-requirements.yml
      environment:
        ANSIBLE_ROLES_PATH: "{{ tripleo_ansible_project_path }}/tripleo_ansible/roles.galaxy"
