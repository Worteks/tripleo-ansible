---
driver:
  name: docker

log: true

platforms:
  - name: centos7
    hostname: centos7
    image: centos:7
    dockerfile: Dockerfile
    pkg_extras: python-setuptools
    easy_install:
      - pip
    environment: &env
      http_proxy: "{{ lookup('env', 'http_proxy') }}"
      https_proxy: "{{ lookup('env', 'https_proxy') }}"
    command: /sbin/init
    security_opts:
      - seccomp=unconfined
    tmpfs:
      - /run
      - /tmp
    capabilities:
      - ALL
    volumes: &vols
      - /run/udev:/run/udev:ro
      - /sys/fs/cgroup:/sys/fs/cgroup:ro
      - /var/run/docker.sock:/var/run/docker.sock

  # TODO(cloudnull): when RDO has centos8 repos this test node should be re-enabled.
  #
  # - name: centos8
  #   hostname: centos8
  #   image: centos:8
  #   dockerfile: Dockerfile
  #   pkg_extras: python*-setuptools
  #   environment:
  #     http_proxy: "{{ lookup('env', 'http_proxy') }}"
  #     https_proxy: "{{ lookup('env', 'https_proxy') }}"
  #   command: /sbin/init
  #   privileged: true
  #   security_opts:
  #     - seccomp=unconfined
  #   tmpfs:
  #     - /run
  #     - /tmp
  #   capabilities:
  #     - ALL
  #   volumes: *vols

  - name: registry
    hostname: registry
    image: registry:2
    dockerfile: DockerfileRegistry
    environment:
      <<: *env
    command: /etc/docker/registry/config.yml
    exposed_ports:
      - 5000/udp
      - 5000/tcp
    published_ports:
      - 0.0.0.0:8787:5000/udp
      - 0.0.0.0:8787:5000/tcp

provisioner:
  name: ansible
  config_options:
    defaults:
      fact_caching: jsonfile
      fact_caching_connection: /tmp/molecule/facts
  env:
    ANSIBLE_STDOUT_CALLBACK: yaml

scenario:
  test_sequence:
    - destroy
    - create
    - prepare
    - converge
    - verify
    - destroy

lint:
  enabled: false

verifier:
  name: testinfra
  lint:
    name: flake8
