---
driver:
  name: podman

log: true

platforms:
  - name: ubi8
    hostname: ubi8
    image: ubi8/ubi-init
    registry:
      url: registry.access.redhat.com
    dockerfile: Dockerfile
    pkg_extras: python*setuptools
    volumes:
      - /etc/ci/mirror_info.sh:/etc/ci/mirror_info.sh:ro
      - /etc/pki/rpm-gpg:/etc/pki/rpm-gpg
      - /opt/yum.repos.d:/etc/yum.repos.d:rw
      - /etc/dnf/vars:/etc/dnf/vars
    privileged: true
    environment: &env
      http_proxy: "{{ lookup('env', 'http_proxy') }}"
      https_proxy: "{{ lookup('env', 'https_proxy') }}"
    ulimits: &ulimit
      - host

provisioner:
  log: true
  env:
    ANSIBLE_STDOUT_CALLBACK: yaml
  name: ansible
  inventory:
    hosts:
      all:
        hosts:
          ubi8:
            ansible_python_interpreter: /usr/bin/python3
        vars:
          # use a tmp hosts path since /etc/hosts isn't writeable in the
          # molecule test containers
          tripleo_hosts_entries_hosts_path: /tmp/hosts
          tripleo_hosts_entries_undercloud_hosts_entries: []
          tripleo_hosts_entries_extra_hosts_entries: []
          tripleo_hosts_entries_vip_hosts_entries: []
          cloud_domain: localdomain
          enabled_networks:
            - ctlplane
            - InternalApi
          role_networks:
            - ctlplane
            - InternalApi
            - DisabledNet
          networks:
            ctlplane:
              name_lower: ctlplane
            InternalApi:
              name_lower: internal_api
        children:
          allovercloud:
            hosts:
              ubi8:
                hostname_resolve_network: ctlplane
                ctlplane_ip: 192.168.24.1
                internal_api_ip: 172.17.0.1

scenario:
  test_sequence:
    - destroy
    - create
    - prepare
    - converge
    - check
    - verify
    - destroy

verifier:
  name: ansible
